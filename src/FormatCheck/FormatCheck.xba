<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="FormatCheck" script:language="StarBasic">Public oFormatOptionDialog as object
Public oApplyCheckDialog as object
Global oInfobarUse as Boolean
Public oMsg as String
Global toApplyCheck as Integer
Global noeventListener as Boolean
&apos;Public oInitial as Boolean
&apos;Public oReload as Boolean
&apos;Global oEnabled as Boolean

REM 只有在文件啟動時觸發
sub eventListener(event as com.sun.star.document.DocumentEvent)
	&apos; init oInfobarUse
	oInfobarUse = false

	&apos; check noeventListener
	if noeventListener = true then
		noeventListener = false
		exit sub
	end if

	&apos; check document extension_name
    if getExtensionName(event.source) = &quot;docx&quot; or getExtensionName(event.source) = &quot;doc&quot;then
    	exit sub
    end if

	&apos; check document generator
    if _IsMsGenerator(event.source) &lt;&gt; 1 then
    	exit sub
    end if

    &apos; 
	if checkSaveAsThenReload(event.source) then
		removeSaveAsThenReloadDocumentProperty(event.source)
		event.source.store()
		exit sub
	end if

	&apos; check document saved
	if event.source.getURL() = &quot;&quot; then
		exit sub
	end if

	&apos; check OOoName
	if oFindOOoName() = true then
		&apos; use infobar
		oInfobarUse = true
		exit sub
	end if

	&apos;oInitial = true
	Dim ret
	&apos;msgbox event.EventName
	if checkModify(event.Source) then
		exit sub
	end if 
	if not event.source.supportsService(&quot;com.sun.star.text.TextDocument&quot;) then
		exit sub
	end if
    oFormatOptionDialog = LoadModelessDialog(&quot;FormatCheck&quot;, &quot;FormatOptionWraning&quot;)
    oFormatOptionDialog.visible = true
end sub

function oFindOOoName() as Boolean
	Dim oSet as Object, oConfigProvider as Object
	Dim oParm(0) As New com.sun.star.beans.PropertyValue
	Dim oProvider$, oAccess$
	Dim OOoName As String
	Dim oSch As String
		oProvider = &quot;com.sun.star.configuration.ConfigurationProvider&quot;
		oAccess   = &quot;com.sun.star.configuration.ConfigurationAccess&quot;
		oConfigProvider = createUnoService(oProvider)
		oParm(0).Name = &quot;nodepath&quot;
		oParm(0).Value = &quot;/org.openoffice.Setup/Product&quot;
		oSet = oConfigProvider.createInstanceWithArguments(oAccess, oParm())
		OOoName = oSet.getByName(&quot;ooName&quot;)
		oSch = &quot;NDC&quot;
		if InStr(1, OOoName, oSch) &lt;&gt; 0 then
			oFindOOoName = true
		else
			oFindOOoName = false
		endif
End function

function _IsRunFormatCheckInfobar() as Boolean
	_IsRunFormatCheckInfobar = oInfobarUse
End function

function _IsMsGenerator(vDoc) as Integer
	Dim oprop
	oSch = &quot;Microsoft&quot;
	&apos;get the Property
	oprop = vDoc.getDocumentProperties().Generator
	&apos;msgbox oprop
	_IsMsGenerator = InStr(1, oprop, oSch)
End function

Sub getExtensionName(vDoc) as String
	oArgs = vDoc.getArgs()
	GlobalScope.BasicLibraries.LoadLibrary(&quot;Tools&quot;)
	oFile = oArgs(0).Value
	getExtensionName = GetFileNameExtension(oFile)
End Sub

function _EnabledFormatCheck() as Boolean
	oGlobalEventBroadcaster = createUnoservice(&quot;com.sun.star.frame.GlobalEventBroadcaster&quot;)
	mEventProps = oGlobalEventBroadcaster.Events.getByName(&quot;OnLoadFinished&quot;)
	if mEventProps(1).Value = &quot;&quot; then
		_EnabledFormatCheck = false
	else
		_EnabledFormatCheck = true
	end if
End function

Sub addFormatCheckEvent
	&apos;ret = msgbox (&quot;確定要啟用格式修正建議嗎&quot;, MB_OKCANCEL + MB_DEFBUTTON2 + MB_ICONQUESTION, &quot;確認&quot;)
	&apos;if ret = 1 then
		Dim mEventProps(1) as new com.sun.star.beans.PropertyValue
		mEventProps(0).Name = &quot;EventType&quot;
		mEventProps(0).Value = &quot;StarBasic&quot;
		mEventProps(1).Name = &quot;Script&quot;
		mEventProps(1).Value = &quot;vnd.sun.star.script:FormatCheck.FormatCheck.eventListener?language=Basic&amp;location=application&quot;
		
		oGlobalEventBroadcaster = createUnoservice(&quot;com.sun.star.frame.GlobalEventBroadcaster&quot;)
		oGlobalEventBroadcaster.Events.ReplaceByName(&quot;OnLoadFinished&quot;, mEventProps())
	&apos;end if
	msgbox (&quot;已啟用格式修正建議&quot;)
end sub

Sub removeFormatCheckEvent
	&apos;ret = msgbox (&quot;確定要停用格式修正建議嗎&quot;, MB_OKCANCEL + MB_DEFBUTTON2 + MB_ICONQUESTION, &quot;確認&quot;)
	&apos;if ret = 1 then
		Dim mEventProps(1) as new com.sun.star.beans.PropertyValue
		mEventProps(0).Name = &quot;EventType&quot;
		mEventProps(0).Value = &quot;StarBasic&quot;
		mEventProps(1).Name = &quot;Script&quot;
		mEventProps(1).Value = &quot;&quot;
		
		oGlobalEventBroadcaster = createUnoservice(&quot;com.sun.star.frame.GlobalEventBroadcaster&quot;)
		oGlobalEventBroadcaster.Events.ReplaceByName(&quot;OnLoadFinished&quot;, mEventProps())
	&apos;end if
	msgbox (&quot;已停用格式修正建議&quot;)
end sub

function FormatCheckEvent() as Boolean
	oGlobalEventBroadcaster = createUnoservice(&quot;com.sun.star.frame.GlobalEventBroadcaster&quot;)
	mEventProps = oGlobalEventBroadcaster.Events.getByName(&quot;OnLoadFinished&quot;)
	if mEventProps(1).Value = &quot;&quot; then
		addFormatCheckEvent
		oEnabled = false
	else
		removeFormatCheckEvent
		oEnabled = true
	end if
End function

sub menuAction
	if not thiscomponent.supportsService(&quot;com.sun.star.text.TextDocument&quot;) then
		exit sub
	end if
	if ThisComponent.isModified or ThisComponent.getURL() = &quot;&quot; then
		ret = msgbox (&quot;使用此功能前必須先存檔，您想要存檔嗎？&quot;, MB_OKCANCEL + MB_DEFBUTTON2 + MB_ICONQUESTION, &quot;確認&quot;)
		if ret = 1 then
			document   = ThisComponent.CurrentController.Frame
			dispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)
			
			rem ----------------------------------------------------------------------
			dispatcher.executeDispatch(document, &quot;.uno:SaveAs&quot;, &quot;&quot;, 0, Array())
			if ThisComponent.getURL() = &quot;&quot; or ThisComponent.isModified then
				msgbox &quot;請先為檔案選擇一個儲存位置再行使用本功能!&quot;
				exit sub
			end if
			&apos;AddSaveAsThenReloadProperty(thiscomponent)
	        Goto toRun
		end if
		exit sub &apos;if ret != 1&apos;
	end if
	Goto toRun
toRun:
	&apos;thiscomponent.store()
	&apos; check document generator
    if _IsMsGenerator(ThisComponent) &lt;&gt; 1 then
		oFormatOptionDialog = LoadModelessDialog(&quot;FormatCheck&quot;, &quot;FormatOption&quot;)
		oFormatOptionDialog.visible = true
	else
		oFormatOptionDialog = LoadModelessDialog(&quot;FormatCheck&quot;, &quot;FormatOptionWraning&quot;)
		oFormatOptionDialog.visible = true
    end if
	
end sub

sub formatOption(event)
	checkenablebox = false
	oDialog = event.source.context
	oDialog.visible = false
	oMsgDoNothing = &quot;[未發現]文件中沒有需要校正的格式!&quot;
	oMsg = &quot;&quot;

   	if oDialog.getControl(&quot;paraEmpty&quot;).State = &quot;1&quot; then
   		replaceAllSpaceAsOneTabinParagraphs(thiscomponent)
   		checkenablebox = true
   	end if
   	if oDialog.getControl(&quot;disableGrid&quot;).State = &quot;1&quot; then
   		disableGrid(thiscomponent)
   		checkenablebox = true
   	end if
   	if oDialog.getControl(&quot;pageBreak&quot;).State = &quot;1&quot; then
   		setPageBreak(thiscomponent)
   		checkenablebox = true
   	end if
   	if oDialog.getControl(&quot;lineSpace&quot;).State = &quot;1&quot; then
   		changeLineSpacing(thiscomponent)
   		checkenablebox = true
   	end if
   	if checkenablebox = false then
   		msgbox &quot;未選擇任何選項!&quot;
   		exit sub
   	end if
   	if toApplyCheck then
   		if not DialogIsRunning(oApplyCheckDialog) then
   			oApplyCheckDialog = LoadModelessDialog(&quot;FormatCheck&quot;, &quot;applyCheck&quot;)
   			oApplyCheckDialog.getControl(&quot;Result_Label&quot;).Text = oMsg
   		end if
		oApplyCheckDialog.visible = true
	else
		msgbox (oMsgDoNothing, MB_ICONEXCLAMATION, &quot;通知&quot;)
	end if
	
end sub

sub actionApply(event)
	oDialog_check = event.source.context
	oDialog_check.visible = false
	document   = ThisComponent.CurrentController.Frame
	dispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)
	
	rem ----------------------------------------------------------------------
	dispatcher.executeDispatch(document, &quot;.uno:SaveAs&quot;, &quot;&quot;, 0, Array())
	if ThisComponent.getURL() = &quot;&quot; or ThisComponent.isModified then
		msgbox &quot;請先為檔案選擇一個儲存位置再行使用本功能!&quot;
		actionReload(event)
		exit sub
	end if
	AddNewDocumentProperty(thiscomponent)
	thiscomponent.store()
	toApplyCheck = 0 &apos;init toApplyChec
end sub

sub actionReload(event)
	&apos;if toApplyCheck then
		noeventListener = true
	&apos;end if
	oDialog_check = event.source.context
	oDialog_check.visible = false
	thiscomponent.setModified(False)  &apos;Ignore changes&apos;
	document = thiscomponent.CurrentController.Frame
	dispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)
	dispatcher.executeDispatch(document, &quot;.uno:Reload&quot;, &quot;&quot;, 0, Array())
	&apos;if oInitial then
	&apos;	if not DialogIsRunning(oFormatOptionDialog) then
	&apos;		oFormatOptionDialog = LoadModelessDialog(&quot;FormatCheck&quot;, &quot;FormatOption&quot;)
	&apos;	end if
	&apos;	oFormatOptionDialog.visible = true
	&apos;end if
	AddNewDocumentProperty(thiscomponent)
	thiscomponent.store()
	toApplyCheck = 0 &apos;init toApplyCheck
end sub

sub testtest
	if ThisComponent.getURL() = &quot;&quot; then
		document   = ThisComponent.CurrentController.Frame
		dispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)
		
		rem ----------------------------------------------------------------------
		dispatcher.executeDispatch(document, &quot;.uno:SaveAs&quot;, &quot;&quot;, 0, Array())
		if ThisComponent.getURL() = &quot;&quot; then
			msgbox &quot;請問檔案選擇一個儲存位置在行使用本功能&quot;
			exit sub
		end if 

	end if
	if not DialogIsRunning(oFormatOptionDialog) then
		oFormatOptionDialog = LoadModelessDialog(&quot;FormatCheck&quot;, &quot;FormatOption&quot;)
	end if
    oFormatOptionDialog.visible = true
end sub

function AddNewDocumentProperty(vDoc)
  Dim oUDP
  oUDP = vDoc.getDocumentProperties().UserDefinedProperties
  If NOT oUDP.getPropertySetInfo().hasPropertyByName(&quot;FormatCheck&quot;) Then
    oUDP.addProperty(&quot;FormatCheck&quot;, _
      com.sun.star.beans.PropertyAttribute.MAYBEVOID + _
      com.sun.star.beans.PropertyAttribute.REMOVEABLE + _
      com.sun.star.beans.PropertyAttribute.MAYBEDEFAULT, _
      True)
  End If
End function

function AddSaveAsThenReloadProperty(vDoc)
  Dim oUDP
  oUDP = vDoc.getDocumentProperties().UserDefinedProperties
  If NOT oUDP.getPropertySetInfo().hasPropertyByName(&quot;SaveAsThenReload&quot;) Then
    oUDP.addProperty(&quot;SaveAsThenReload&quot;, _
      com.sun.star.beans.PropertyAttribute.MAYBEVOID + _
      com.sun.star.beans.PropertyAttribute.REMOVEABLE + _
      com.sun.star.beans.PropertyAttribute.MAYBEDEFAULT, _
      True)
  End If
End function 

function removeSaveAsThenReloadDocumentProperty(vDoc)
  Dim oUDP
  oUDP = vDoc.getDocumentProperties().UserDefinedProperties
  If oUDP.getPropertySetInfo().hasPropertyByName(&quot;SaveAsThenReload&quot;) Then
    oUDP.removeProperty(&quot;SaveAsThenReload&quot;)
  End If
End function 

sub testReloadProperty()
	Dim oUDP
	
  	oUDP = thiscomponent.getDocumentProperties().UserDefinedProperties
  	If oUDP.getPropertySetInfo().hasPropertyByName(&quot;SaveAsThenReload&quot;) Then
  		msgbox &quot;has&quot;
  	end if
end sub

function checkSaveAsThenReload(vDoc)
	Dim oUDP
	checkSaveAsThenReload = False
  	oUDP = vDoc.getDocumentProperties().UserDefinedProperties
  	If oUDP.getPropertySetInfo().hasPropertyByName(&quot;SaveAsThenReload&quot;) Then
  		checkSaveAsThenReload = True
  	end if
end function

function removeDocumentProperty()
  Dim oUDP
  oUDP = ThisComponent.getDocumentProperties().UserDefinedProperties
  If oUDP.getPropertySetInfo().hasPropertyByName(&quot;FormatCheck&quot;) Then
    oUDP.removeProperty(&quot;FormatCheck&quot;)
  else
  	msgbox &quot;已移除文件特性&quot;
  End If
End function 

function checkModify(vDoc)
	Dim oUDP
	checkModify = False
  	oUDP = vDoc.getDocumentProperties().UserDefinedProperties
  	If oUDP.getPropertySetInfo().hasPropertyByName(&quot;FormatCheck&quot;) Then
  		checkModify = True
  	end if
end function

sub doReplaceEmpty
	if not thiscomponent.supportsService(&quot;com.sun.star.text.TextDocument&quot;) then
		msgbox &quot;此功能僅支援 Writer&quot;
		exit sub
	end if
	&apos;oInitial = false
	&apos;oReload = true
	oDisp = &quot;&quot;
	oFileSaveAs = ThisComponent.isModified or ThisComponent.getURL() = &quot;&quot;
	if oFileSaveAs then
		oDisp = oDisp + &quot;使用此功能前必須先存檔，確定要套用取代段落空白為定位符嗎？&quot;
	else
		oDisp = oDisp + &quot;確定要套用取代段落空白為定位符嗎？&quot;
	end if
	ret = msgbox (oDisp, MB_OKCANCEL + MB_DEFBUTTON2 + MB_ICONQUESTION, &quot;確認&quot;)

	if ret = 1 then
		if oFileSaveAs then
			document   = ThisComponent.CurrentController.Frame
			dispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)
			
			rem ----------------------------------------------------------------------
			dispatcher.executeDispatch(document, &quot;.uno:SaveAs&quot;, &quot;&quot;, 0, Array())
			if ThisComponent.getURL() = &quot;&quot; or ThisComponent.isModified then
				msgbox &quot;請先為檔案選擇一個儲存位置再行使用本功能!&quot;
				exit sub
			&apos;AddSaveAsThenReloadProperty(thiscomponent)
			end if
			Goto toRun
		else
			Goto toRun
		end if
	end if

	exit sub &apos;if ret != 1&apos;	
toRun:
	&apos;thiscomponent.store()	
	replaceAllSpaceAsOneTabinParagraphs(thiscomponent)
	if toApplyCheck then
		oApplyCheckDialog = LoadModelessDialog(&quot;FormatCheck&quot;, &quot;applyCheck&quot;)
		oApplyCheckDialog.getControl(&quot;Result_Label&quot;).Text = oMsg
		oApplyCheckDialog.visible = true
	else
		msgbox (oMsg, MB_ICONEXCLAMATION, &quot;通知&quot;)
	end if
end sub

sub doDisableGrid
	if not thiscomponent.supportsService(&quot;com.sun.star.text.TextDocument&quot;) then
		msgbox &quot;此功能僅支援 Writer&quot;
		exit sub
	end if
	&apos;oInitial = false
	&apos;oReload = true
	oDisp = &quot;&quot;
	oFileSaveAs = ThisComponent.isModified or ThisComponent.getURL() = &quot;&quot;
	if oFileSaveAs then
		oDisp = oDisp + &quot;使用此功能前必須先存檔，確定要套用取消格線嗎？&quot;
	else
		oDisp = oDisp + &quot;確定要套用取消格線嗎？&quot;
	end if
	ret = msgbox (oDisp, MB_OKCANCEL + MB_DEFBUTTON2 + MB_ICONQUESTION, &quot;確認&quot;)
	
	if ret = 1 then
		if oFileSaveAs then
			document   = ThisComponent.CurrentController.Frame
			dispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)
			
			rem ----------------------------------------------------------------------
			dispatcher.executeDispatch(document, &quot;.uno:SaveAs&quot;, &quot;&quot;, 0, Array())
			if ThisComponent.getURL() = &quot;&quot; or ThisComponent.isModified then
				msgbox &quot;請先為檔案選擇一個儲存位置再行使用本功能!&quot;
				exit sub
			end if 
			&apos;AddSaveAsThenReloadProperty(thiscomponent)
			Goto toRun
		else
			Goto toRun
		end if
	end if

	exit sub &apos;if ret != 1&apos;
toRun:
	&apos;thiscomponent.store()	
	disableGrid(thiscomponent)
	if toApplyCheck then
		oApplyCheckDialog = LoadModelessDialog(&quot;FormatCheck&quot;, &quot;applyCheck&quot;)
		oApplyCheckDialog.getControl(&quot;Result_Label&quot;).Text = oMsg
		oApplyCheckDialog.visible = true
	else
		msgbox (oMsg, MB_ICONEXCLAMATION, &quot;通知&quot;)
	end if
end sub

sub doChangeLineSpacing
	if not thiscomponent.supportsService(&quot;com.sun.star.text.TextDocument&quot;) then
		msgbox &quot;此功能僅支援 Writer&quot;
		exit sub
	end if
	&apos;oInitial = false
	&apos;oReload = true
	oDisp = &quot;&quot;
	oFileSaveAs = ThisComponent.isModified or ThisComponent.getURL() = &quot;&quot;
	if oFileSaveAs then
		oDisp = oDisp + &quot;使用此功能前必須先存檔，確定要套用行距為單行嗎？&quot;
	else
		oDisp = oDisp + &quot;確定要套用行距為單行嗎？&quot;
	end if
	ret = msgbox (oDisp, MB_OKCANCEL + MB_DEFBUTTON2 + MB_ICONQUESTION, &quot;確認&quot;)

	if ret = 1 then
		if oFileSaveAs then
			document   = ThisComponent.CurrentController.Frame
			dispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)
			
			rem ----------------------------------------------------------------------
			dispatcher.executeDispatch(document, &quot;.uno:SaveAs&quot;, &quot;&quot;, 0, Array())
			if ThisComponent.getURL() = &quot;&quot; or ThisComponent.isModified then
				msgbox &quot;請先為檔案選擇一個儲存位置再行使用本功能!&quot;
				exit sub
			end if 
			&apos;AddSaveAsThenReloadProperty(thiscomponent)
			Goto toRun
		else
			Goto toRun
		end if
	end if

	exit sub &apos;if ret != 1&apos;
toRun:
	&apos;thiscomponent.store()	
	changeLineSpacing(thiscomponent)
	if toApplyCheck then
		oApplyCheckDialog = LoadModelessDialog(&quot;FormatCheck&quot;, &quot;applyCheck&quot;)
		oApplyCheckDialog.getControl(&quot;Result_Label&quot;).Text = oMsg
		oApplyCheckDialog.visible = true
	else
		msgbox (oMsg, MB_ICONEXCLAMATION, &quot;通知&quot;)
	end if
end sub

sub doSetPageBreak
	if not thiscomponent.supportsService(&quot;com.sun.star.text.TextDocument&quot;) then
		msgbox &quot;此功能僅支援 Writer&quot;
		exit sub
	end if
	&apos;oInitial = false
	&apos;oReload = true
	oDisp = &quot;&quot;
	oFileSaveAs = ThisComponent.isModified or ThisComponent.getURL() = &quot;&quot;
	if oFileSaveAs then
		oDisp = oDisp + &quot;使用此功能前必須先存檔，確定要套用以換行符取代 Enter 換頁嗎？&quot;
	else
		oDisp = oDisp + &quot;確定要套用以換行符取代 Enter 換頁嗎？&quot;
	end if
	ret = msgbox (oDisp, MB_OKCANCEL + MB_DEFBUTTON2 + MB_ICONQUESTION, &quot;確認&quot;)

	if ret = 1 then
		if oFileSaveAs then
			document   = ThisComponent.CurrentController.Frame
			dispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)
			
			rem ----------------------------------------------------------------------
			dispatcher.executeDispatch(document, &quot;.uno:SaveAs&quot;, &quot;&quot;, 0, Array())
			if ThisComponent.getURL() = &quot;&quot; or ThisComponent.isModified then
				msgbox &quot;請先為檔案選擇一個儲存位置再行使用本功能!&quot;
				exit sub
			end if 
			&apos;AddSaveAsThenReloadProperty(thiscomponent)
			Goto toRun
		else
			Goto toRun
		end if
	end if

	exit sub &apos;if ret != 1
toRun:
	&apos;thiscomponent.store()
	setPageBreak(thiscomponent)
	if toApplyCheck then
		oApplyCheckDialog = LoadModelessDialog(&quot;FormatCheck&quot;, &quot;applyCheck&quot;)
		oApplyCheckDialog.getControl(&quot;Result_Label&quot;).Text = oMsg
		oApplyCheckDialog.visible = true
	else
		msgbox (oMsg, MB_ICONEXCLAMATION, &quot;通知&quot;)
	end if
end sub

sub doNDCHyperLink
	if not thiscomponent.supportsService(&quot;com.sun.star.sheet.SpreadsheetDocument&quot;) then
		msgbox &quot;此功能僅支援 Calc&quot;
		exit sub
	end if
	&apos;oInitial = false
	&apos;oReload = true
	oDisp = &quot;&quot;
	oFileSaveAs = ThisComponent.isModified or ThisComponent.getURL() = &quot;&quot;
	if oFileSaveAs then
		oDisp = oDisp + &quot;使用此功能前必須先存檔，確定要套用以 NDC 超連結取代選取範圍的內建超連結嗎？&quot;
	else
		oDisp = oDisp + &quot;確定要套用以 NDC 超連結取代選取範圍的內建超連結嗎？&quot;
	end if
	ret = msgbox (oDisp, MB_OKCANCEL + MB_DEFBUTTON2 + MB_ICONQUESTION, &quot;確認&quot;)

	if ret = 1 then
		if oFileSaveAs then
			document   = ThisComponent.CurrentController.Frame
			dispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)
			
			rem ----------------------------------------------------------------------
			dispatcher.executeDispatch(document, &quot;.uno:SaveAs&quot;, &quot;&quot;, 0, Array())
			if ThisComponent.getURL() = &quot;&quot; or ThisComponent.isModified then
				msgbox &quot;請先為檔案選擇一個儲存位置再行使用本功能!&quot;
				exit sub
			end if 
			&apos;AddSaveAsThenReloadProperty(thiscomponent)
			Goto toRun
		else
			Goto toRun
		end if
	end if

	exit sub &apos;if ret != 1
toRun:
	&apos;thiscomponent.store()	
	SetSelectedCells(thiscomponent)
	if toApplyCheck then	
		oApplyCheckDialog = LoadModelessDialog(&quot;FormatCheck&quot;, &quot;applyCheck&quot;)
		oApplyCheckDialog.visible = true
	end if
end sub

Sub replaceAllSpaceAsOneTabinParagraphs(vDoc)
  Dim oEnum              &apos;com.sun.star.container.XEnumerationAccess
  Dim oPar               &apos;Paragraph of some sort
  Dim nPars As Integer   &apos;Number of paragraphs
  Dim nTables As Integer &apos;Number of tables
  Dim temp As String
  Dim counter as Integer
  Dim changeflag As Integer
  REM ThisComponent refers to the current OOo document
  REM Text is a property of ThisComponent for a text document
  REM The getText() object method returns the same thing.
  REM createEnumeration() is an object method.

  if isNull(vDoc) then
  	vDoc = ThisComponent
  end if
  changeflag = 0
  oEnum = vDoc.Text.createEnumeration()
  Do While oEnum.hasMoreElements()
    oPar = oEnum.nextElement()
    REM print(oPar.DBG_methods)
    REM The returned paragraph will be a paragraph or a text table
    If oPar.supportsService(&quot;com.sun.star.text.Paragraph&quot;) Then
      &apos;MsgBox(oPar.DBG_methods)
      &apos;msgbox(oPar.getString())
      dim spaceNumber as integer
      dim tabNumber as integer
      dim startString 
      dim replaceString 
      replaceString = &quot;&quot;
      startString = &quot;&quot;
      temp = oPar.getString()
      spaceNumber = 0
      tabNumber = 0
      for counter = 1 to Len(temp)
      	Dim cChar
      	cChar = mid(temp, counter, 1)
      	if cChar = &quot; &quot; then
 			spaceNumber = spaceNumber+1
 		elseif cChar = &quot;	&quot; then 
 			tabNumber = tabNumber +1
 		else exit for
 		end if
 		startString = startString + cChar
      next
      
      if spaceNumber &gt; 0 then
      	if tabNumber &gt; 1 then
      		&apos;msgbox tabNumber
	      	for counter = 1 to tabNumber
	      		replaceString = replaceString + &quot;	&quot;
	      		&apos;msgbox counter
	      	next
	    else 
	    	replaceString = &quot;	&quot;
	    end if
      	temp = replace(temp, startString, replaceString, 1, 1, FALSE)
        oPar.setString(temp)
        nPars = nPars + 1
      	changeflag = changeflag + 1
      end if
    ElseIf oPar.supportsService(&quot;com.sun.star.text.TextTable&quot;) Then
      nTables = nTables + 1
    End If
  Loop
  if changeflag then
     toApplyCheck = toApplyCheck + 1
     oMsg = oMsg + &quot;[修正]段落開頭空白字元為Tab&quot; &amp; Chr$(10)
  else
	oMsg = oMsg + &quot;[未發現]文件中未發現段落開頭空白字元!&quot; &amp; Chr$(10)
    &apos;msgbox &quot;文件中未發現段落開頭空白字元!&quot;
  end if
End Sub

Sub changeLineSpacing(vDoc)
  Dim oEnum              &apos;com.sun.star.container.XEnumerationAccess
  Dim oPar               &apos;Paragraph of some sort
  Dim nPars As Integer   &apos;Number of paragraphs
  Dim nTables As Integer &apos;Number of tables
  Dim temp As String
  Dim counter as Integer
  Dim vPropInfo
  Dim changeflag As Integer
  REM ThisComponent refers to the current OOo document
  REM Text is a property of ThisComponent for a text document
  REM The getText() object method returns the same thing.
  REM createEnumeration() is an object method.
  if isNull(vDoc) then
  	vDoc = ThisComponent
  end if
  oEnum = vDoc.Text.createEnumeration()
  dim v
  changeflag = 0
  Do While oEnum.hasMoreElements()
    oPar = oEnum.nextElement()
    REM print(oPar.DBG_methods)
    REM The returned paragraph will be a paragraph or a text table
    If oPar.supportsService(&quot;com.sun.star.text.Paragraph&quot;) Then
	   	v = oPar.ParaLineSpacing
	   	&apos;msgbox &quot;v.Mode = &quot; + v.Mode + &quot;  v.Height = &quot; + v.Height
	   	if  v.Height &lt;&gt; 100 then
			v.Mode = 0
			v.Height = 100
			oPar.ParaLineSpacing = v
			changeflag = changeflag + 1
		end if
		&apos;oPar.ParaLineSpacing = v
	 end if
  Loop

  if changeflag then
  	toApplyCheck = toApplyCheck + 1
  	oMsg = oMsg + &quot;[修正]段落為單行行距&quot; &amp; Chr$(10)
  else
  	oMsg = oMsg + &quot;[未發現]文件中段落設定都是單行行距!&quot; &amp; Chr$(10)
  	&apos;msgbox &quot;文件中段落設定都是單行行距!&quot;
  end if
end sub


Sub disableGrid(vDoc)
    Dim oViewCursor as object
    Dim pagestyle as string
    Dim oStyle as object
    Dim aStyle as object
    Dim ret as integer 
    if isNull(vDoc) then
    vDoc = ThisComponent
    end if
    oViewCursor = vDoc.CurrentController.getViewCursor()
    pagestyle = oViewCursor.PageStyleName 
    oStyle = vDoc.StyleFamilies.getByName(&quot;PageStyles&quot;).getByName(pagestyle)
    if oStyle.GridMode = 1 or oStyle.GridMode = 2 then
	   	oStyle.GridMode = 0
	   	toApplyCheck = toApplyCheck + 1
	   	oMsg = oMsg + &quot;[修正]網格設定&quot; &amp; Chr$(10)
	else
		oMsg = oMsg + &quot;[未發現]文件中未發現有網格!&quot; &amp; Chr$(10)
		&apos;msgbox &quot;文件中未發現有網格!&quot;
	end if
End Sub

Sub SilentlyReload
	ThisComponent.setModified(False)  &apos;Ignore changes&apos;
	document = ThisComponent.CurrentController.Frame
	dispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)
	dispatcher.executeDispatch(document, &quot;.uno:Reload&quot;, &quot;&quot;, 0, Array())
End Sub

Sub setPageBreak(vDoc)
  Dim oParEnum           &apos;Paragraph enumerator
  Dim osecEnum           &apos;Text section enumerator
  Dim oPar               &apos;Current paragraph
  Dim oParSection        &apos;Current section
  Dim nPars As Integer   &apos;Number of paragraphs
  Dim s$
  dim emptyCounter as integer
  Dim emptyParaCollect(100)
  dim allnone as Boolean
  emptyCounter = 0
  dim preParString
  preParString = &quot;&quot;
  dim softBreakCheck
  softBreakCheck = false
  dim parString
  parString = &quot;&quot;
  dim i
  dim insertPageBreak
  insertPageBreak = false
  if isNull(vDoc) then
  	vDoc = This.Component
  end if
  allnone = true
  oParEnum = vDoc.Text.createEnumeration()
  Do While oParEnum.hasMoreElements()
    oPar = oParEnum.nextElement()
    If oPar.supportsService(&quot;com.sun.star.text.Paragraph&quot;) Then
      parString = oPar.getString()
      if parString = &quot;&quot; then
      	emptyParaCollect(emptyCounter) = oPar
      	emptyCounter = emptyCounter + 1
      elseif insertPageBreak then
      	oPar.PageDescName = oPar.PageStyleName
      end if
      if parString = &quot;&quot; and softBreakCheck then
      	vDoc.Text.removeTextContent(oPar)
      elseif parString &lt;&gt; &quot;&quot; and checkSoftbreak(oPar) = false then
      	softBreakCheck = false
      	emptyCounter = 0
        Redim emptyParaCollect(100)
      end if
      oSecEnum = oPar.createEnumeration()
      Do While oSecEnum.hasMoreElements()
        oParSection = oSecEnum.nextElement()
        if oParSection.TextPortionType = &quot;SoftPageBreak&quot; then
        	&apos;msgbox emptyCounter
        	allnone = false
        	if preParString = &quot;&quot; then
	        	dim arraSize 
	        	arraSize = emptyCounter - 2
	        	for i = 0 to (arraSize)
	        		vDoc.Text.removeTextContent(emptyParaCollect(i))
	        	next
	        	if parString &lt;&gt; &quot;&quot; then
        			oPar.PageDescName = oPar.PageStyleName
        		else
        			insertPageBreak = true
        		end if
        	end if
        	emptyCounter = 0
        	Redim emptyParaCollect(100)
        	if parString = &quot;&quot; then
        		vDoc.Text.removeTextContent(oPar)
        		softBreakCheck = true
        	end if
        end if
      Loop
      preParString = parString
    End If
  Loop
  if allnone then
  	oMsg = oMsg + &quot;[未發現]文件中未發現有 Enter 換頁情形!&quot; &amp; Chr$(10)
	&apos;msgbox &quot;文件中未發現有 Enter 換頁情形!&quot;
  else
  	oMsg = oMsg + &quot;[修正] Enter 換頁&quot; &amp; Chr$(10)
  	toApplyCheck = toApplyCheck + 1
  end if
End Sub

sub checkSoftbreak(oPar) as boolean
	checkSoftbreak = false
	oSecEnum = oPar.createEnumeration()
    Do While oSecEnum.hasMoreElements()
    	oParSection = oSecEnum.nextElement()
        if oParSection.TextPortionType = &quot;SoftPageBreak&quot; then
         checkSoftbreak = true
        end if
    Loop
end sub
</script:module>